int led1 = 11;
int led2 = 12;
int led3 = 13;

int height = 0;
int width = 0;
int imago = 0;
byte dataa[16 * 16 * 3];
bool uploaded = false;

void setup()
{
    Serial.begin(9600);
    pinMode(led1, OUTPUT);
    pinMode(led2, OUTPUT);
    pinMode(led3, OUTPUT);
}

int avl = 0;

void loop()
{

    if (Serial.available())
    {
        char command = Serial.read();
        if (command == 'A')
        {
            turnLightOn(led1);
        }
        else if (command == 'B')
        {
            turnLightOff(led1);
        }
        if (command == 'C')
        {
            turnLightOn(led2);
        }
        else if (command == 'D')
        {
            turnLightOff(led2);
        }
        if (command == 'E')
        {
            turnLightOn(led3);
        }
        else if (command == 'F')
        {
            turnLightOff(led3);
        }
        else if (command == 'U')
        {
          imageUpload();
          
        }
    }
}

void turnLightOn(int led)
{
    digitalWrite(led, HIGH); // Turn  on the LED
    Serial.println("LED is ON");
}
void turnLightOff(int led)
{
    digitalWrite(led, LOW); // Turn off the LED
    Serial.println("LED is OFF");
}
const int PAYLOAD = 60;

void imageUpload()
{
    int count = 0;
    byte receivedData[PAYLOAD];
    int len = 0; 
    Serial.print("Stated"); 
    while (true)
    {
        delay(500);
        len = Serial.available();
        if(len>0){
          count++;
          if(len>=60){
            Serial.readBytes(receivedData, 60);
            for(int i=0;i<60;i+=3){
              Serial.print(receivedData[i]);
              Serial.print("-");
              Serial.print(receivedData[i+1]);
              Serial.print("-");
              Serial.print(receivedData[i+2]);
              Serial.print(" ");
              receivedData[i]=0;
              receivedData[i+1]=0;
              receivedData[i+2]=0;
            }
              // Serial.println("");
          }
          else{
            Serial.readBytes(receivedData,len);
             if(len>3){
              for(int i=0;i<len;i+=3){
                Serial.print(receivedData[i]);
                Serial.print("-");
                Serial.print(receivedData[i+1]);
                Serial.print("-");
                Serial.print(receivedData[i+2]);
                receivedData[i]=0;
                receivedData[i+1]=0;
                receivedData[i+2]=0;
                Serial.print(" ");
                if(i+3+2==len && receivedData[i+2]=='\n'){
                  
                  Serial.println("That's All");
                  receivedData[i+3]=0;
                  break;
                }
              }
              Serial.println("");
             }
             else{
               if(receivedData[1]=='\n'){
                 Serial.println("");
                 Serial.println("\n found break");
                 Serial.println(count);
               }
             }

            }
        }}  
          

    Serial.print("ENDED ");       

}

